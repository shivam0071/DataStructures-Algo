25-04-2020
1.) IAM - Identity and Access Management

ROOT ACCOUNT -  The main email ID that we use to create an Amazon Account

* Create different account for different types of users acc to their tasks..
  such as developers, data scientist, researchers , business etc
* Always use MFA

Use Root Only for :
* Modify root user details
* change AWS support plan
* change payment options
* closing the account

for other tasks use an IAM account


Features of IAM
* Manage user and their access
* Manage access of Federated Users
* Service with no additional charge
* Fine grain access to AWS resources


IAM BASICS --
* IAM provides centralized control to your AWS, IAM is global..no region required
* IAM allows you to setup own password rotation policy
* When we create a new user, no permission were first granted
* AWS consoler requires USerID and Pass while backend access req access key and secret access..there a created by AWS when a new user is created
* if still you struggle..they provide us access to API and command line
* MFA


IAM Components
USER
Root -- Full Access
Power User -- Admin Access except billing
IAM -- Access to resources based on permissions

Group - A collection of IAM users..

Role -- set of permissions for making AWS service requests

Policies -- Json defining permissions to users groups or roles



S3 - Simple Storage Service
Thing are stored as Objects
You can consider this as folders of windows

* you can store
    Files
    Static Webistes
    Large Files
    Archiving Data
    Backup

Used by Clients such as Netflix, Airbnb, thomas reuters

S3 supports Object Storage(buckets) and Block Storage(EC2)

Object Storage - Normal Files
* Data
* Metadata and URL
* Unique Identifier

Block Storage - They do not have metadata,
* Data is stored in Volumes and blocks
*  Files are split into evenly-sized blocks
* each blocks has its own address
* host DB supports random read/write operations


BUCKETS :- container for objects, just like folders have files
bucket - folders
object - files

Buckets CANT have same name...
Versioning is also there for buckets...which stores all the versions of a object...once an object is versioned it can't be unversioned





